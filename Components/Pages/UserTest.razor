@using RoadTripDb.Repos
@using RoadTripDb.Database.Models
@inject IHostAppUserRepo repo
@page "/Usertest"

<h3>UserTest</h3>

<MudForm>
    <MudTextField @bind-Value="InputID" Label="Id"></MudTextField>
    <MudTextField @bind-Value="Input.DisplayName" Label="Display Name"></MudTextField>
    <MudTextField @bind-Value="Input.Surname" Label="Surname"></MudTextField>
    <MudTextField @bind-Value="Input.PrimaryName" Label="Primary name"></MudTextField>
    <MudButton OnClick="Add" ButtonType="ButtonType.Submit">Add</MudButton>
</MudForm>

<MudTextField @bind-Value="InputID" Label="Search ID"></MudTextField>
<MudButton OnClick="Get">Search</MudButton>
@if (Output != null)
{
    <MudText>@Output.RoadTripUserId, @Output.DisplayName, @Output.PrimaryName, @Output.Surname</MudText>
}
@code {
    public HostAppUser Input { get; set; } = new();
    public HostAppUser? Output { get; set; }
    public Guid SearchID { get; set; } = Guid.Empty;
    public string InputID { get; set; } = Guid.Empty.ToString();


    public async Task Add()
    {
        Input.OpenRooms = new List<Room>();
        Input.RoadTripUserId = Guid.Parse(InputID);
        await repo.AddAsync(Input);
    }

    public async Task Get()
    {
        SearchID = Guid.Parse(InputID);
        Output = await repo.GetHostAppUser(SearchID);
        StateHasChanged();
    }
}
